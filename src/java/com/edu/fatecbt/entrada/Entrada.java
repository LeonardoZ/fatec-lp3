package com.edu.fatecbt.entrada;
// Generated 20/05/2015 20:15:32 by Hibernate Tools 4.3.1

import com.edu.fatecbt.fornecedor.Fornecedor;
import com.edu.fatecbt.produto.Produto;
import com.edu.fatecbt.sistema.modelo.ValidatedEntity;
import com.edu.fatecbt.usuario.Usuario;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Entrada generated by hbm2java
 */
@Entity
@Table(name = "entrada", catalog = "trabalho"
)
public class Entrada extends ValidatedEntity implements java.io.Serializable {

    private Integer codEntrada = 0;
    private Fornecedor fornecedor;
    private Produto produto;
    private Usuario usuario;
    private Date data;
    private Double preco;
    private Double quantidade;
    private Double total;

    public Entrada() {
    }

    public Entrada(Fornecedor fornecedor, Produto produto, Usuario usuario) {
        this.fornecedor = fornecedor;
        this.produto = produto;
        this.usuario = usuario;
    }

    public Entrada(Fornecedor fornecedor, Produto produto, Usuario usuario, Date data, Double preco, Double quantidade, Double total) {
        this.fornecedor = fornecedor;
        this.produto = produto;
        this.usuario = usuario;
        this.data = data;
        this.preco = preco;
        this.quantidade = quantidade;
        this.total = total;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "codEntrada", unique = true, nullable = false)
    public Integer getCodEntrada() {
        return this.codEntrada;
    }

    public void setCodEntrada(Integer codEntrada) {
        this.codEntrada = codEntrada;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fornecedor", nullable = false)
    public Fornecedor getFornecedor() {
        return this.fornecedor;
    }

    public void setFornecedor(Fornecedor fornecedor) {
        this.fornecedor = fornecedor;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "produto", nullable = false)
    public Produto getProduto() {
        return this.produto;
    }

    public void setProduto(Produto produto) {
        this.produto = produto;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usuario", nullable = false)
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "data", length = 10)
    public Date getData() {
        return this.data;
    }

    public void setData(Date data) {
        this.data = data;
    }

    @Column(name = "preco", precision = 22, scale = 0)
    public Double getPreco() {
        return this.preco;
    }

    public void setPreco(Double preco) {
        this.preco = preco;
    }

    @Column(name = "quantidade", precision = 22, scale = 0)
    public Double getQuantidade() {
        return this.quantidade;
    }

    public void setQuantidade(Double quantidade) {
        this.quantidade = quantidade;
    }

    @Column(name = "total", precision = 22, scale = 0)
    public Double getTotal() {
        return this.total;
    }

    public void setTotal(Double total) {
        this.total = total;
    }

    @Transient
    public boolean isValid() {
        return fornecedor != null
                && getProduto() != null
                && getData() != null
                && getPreco() > -1
                && getQuantidade() > 0;
    }

    public void calcularTotal() {
        this.total = quantidade * preco;
    }

}
