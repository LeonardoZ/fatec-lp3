package com.edu.fatecbt.usuario;
// Generated 20/05/2015 20:15:32 by Hibernate Tools 4.3.1

import com.edu.fatecbt.cliente.Cliente;
import com.edu.fatecbt.departamento.Departamento;
import com.edu.fatecbt.entrada.Entrada;
import com.edu.fatecbt.fornecedor.Fornecedor;
import com.edu.fatecbt.produto.Produto;
import com.edu.fatecbt.saida.Saida;
import com.edu.fatecbt.sistema.modelo.ValidatedEntity;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "trabalho"
)
@NamedQueries(
        @NamedQuery(name = "usuario.fazLogin",
                query = "select u from Usuario u where u.login = :login "
                + "and u.senha = :senha")
)
public class Usuario extends ValidatedEntity implements java.io.Serializable {

    private Integer codUsuario = 0;
    private String nome;
    private String login;
    private String senha;
    private Set<Produto> produtos = new HashSet<Produto>(0);
    private Set<Departamento> departamentos = new HashSet<Departamento>(0);
    private Set<Fornecedor> fornecedors = new HashSet<Fornecedor>(0);
    private Set<Cliente> clientes = new HashSet<Cliente>(0);
    private Set<Saida> saidas = new HashSet<Saida>(0);
    private Set<Entrada> entradas = new HashSet<Entrada>(0);

    public Usuario() {
    }

    public Usuario(String nome, String login, String senha, Set<Produto> produtos, Set<Departamento> departamentos, Set<Fornecedor> fornecedors, Set<Cliente> clientes, Set<Saida> saidas, Set<Entrada> entradas) {
        this.nome = nome;
        this.login = login;
        this.senha = senha;
        this.produtos = produtos;
        this.departamentos = departamentos;
        this.fornecedors = fornecedors;
        this.clientes = clientes;
        this.saidas = saidas;
        this.entradas = entradas;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "codUsuario", unique = true, nullable = false)
    public Integer getCodUsuario() {
        return this.codUsuario;
    }

    public void setCodUsuario(Integer codUsuario) {
        this.codUsuario = codUsuario;
    }

    @Column(name = "nome", length = 80)
    public String getNome() {
        return this.nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    @Column(name = "login", length = 20)
    public String getLogin() {
        return this.login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    @Column(name = "senha", length = 32)
    public String getSenha() {
        return this.senha;
    }

    public void setSenha(String senha) {
        this.senha = senha;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<Produto> getProdutos() {
        return this.produtos;
    }

    public void setProdutos(Set<Produto> produtos) {
        this.produtos = produtos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<Departamento> getDepartamentos() {
        return this.departamentos;
    }

    public void setDepartamentos(Set<Departamento> departamentos) {
        this.departamentos = departamentos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<Fornecedor> getFornecedors() {
        return this.fornecedors;
    }

    public void setFornecedors(Set<Fornecedor> fornecedors) {
        this.fornecedors = fornecedors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<Cliente> getClientes() {
        return this.clientes;
    }

    public void setClientes(Set<Cliente> clientes) {
        this.clientes = clientes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<Saida> getSaidas() {
        return this.saidas;
    }

    public void setSaidas(Set<Saida> saidas) {
        this.saidas = saidas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<Entrada> getEntradas() {
        return this.entradas;
    }

    public void setEntradas(Set<Entrada> entradas) {
        this.entradas = entradas;
    }

    @Transient
    public boolean isValid() {
        return notEmptyString(login, senha, nome);
    }

}
